/* Variables */
//colors
$clr-black: hsl(100, 0, 0);
$clr-white: hsl(0, 100, 100);
$clr-grey: hsl(0, 0%, 52%);
$clr-grey-dark: hsl(0, 0%, 20%);
$clr-grey-light: hsl(0, 0%, 93%);
$clr-accent: hsl(274, 93%, 62%);
$clr-accent-light: hsl(276, 81%, 90%);

// typography
$ff-primary: 'Open Sans', sans-serif;
$ff-accent: 'Courier Prime', monospace;

$fs-700: 3rem;
$fs-600: 2.5rem;
$fs-500: 1.25rem;
$fs-400: 1rem;

$fw-700: 700;
$fw-600: 600;
$fw-500: 500;
$fw-400: 400;
$fw-300: 300;

// color themes
// bg-color, text-color, input-bg, toggle-bg, line-color, icon-color, input-color  
$scheme-dark: $clr-black, $clr-white, $clr-grey-dark, $clr-accent, $clr-accent, $clr-accent, $clr-white;
$scheme-light: $clr-white, $clr-black, $clr-grey-light, $clr-grey-light, $clr-grey-light, $clr-grey, $clr-black;

// mixins
// dark and light mode color scheme rules
@mixin color-schemes($bg-color, $text-color, $input-bg, $toggle-bg, $line-color, $icon-color, $input-color) {
  color: $text-color;
  background-color: $bg-color;

  .dictionary svg {
    fill: $icon-color;
  }

  .search-bar {
    background-color: $input-bg;

    input {
      color: $input-color;
    }
  }

  .button.theme-toggle {
    background-color: $toggle-bg;
  }

  .definition-container h2 .deco {
    background-color: $line-color;
  }
}

// use flex to center on the horizontal and verticle
@mixin center-xy {
  display: flex;
  align-items: center;
  justify-content: center;
}

// use flex to center on the horizontal, with space-between
@mixin center-space-between {
  display: flex;
  align-items: center;
  justify-content: space-between;
}


/* Reset */
*,
*::before,
*::after {
  box-sizing: border-box;
}

body,
h1,
h2,
h3,
h4,
p {
  margin: 0;
}

html:focus-within {
  scroll-behavior: smooth;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  line-height: 1.5;
  font-family: $ff-primary;
  font-size: $fs-400;
}

main {
  min-height: 100vh;
}

img {
  max-width: 100%;
  display: block;
}

input,
button {
  font-family: $ff-accent;
  font-size: inherit;
}


/* Utilities */
.ff-primary { font-family: $ff-primary; }
.ff-accent { font-family: $ff-accent; }

.fs-700 { font-size: $fs-700; line-height: 1.3;}
.fs-600 { font-size: $fs-600; }
.fs-500 { font-size: $fs-500; }
.fs-400 { font-size: $fs-400; }

.fw-700 { font-weight: $fw-700; }
.fw-600 { font-weight: $fw-600; }
.fw-500 { font-weight: $fw-500; }
.fw-400 { font-weight: $fw-400; }

.text-accent {  color: $clr-accent }
.text-grey {  color: $clr-grey }

.italic { font-style: italic;}

.container {
  width: min(50ch, 100vw - 2rem);
  margin-inline: auto;
}

.flex {
  display: flex;
  gap: 1rem;
}

.flex-wrap {
  flex-wrap: wrap;
}

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

.dark {
  @include color-schemes($scheme-dark ...);
}

.light {
  @include color-schemes($scheme-light ...);
}


/* Components */
.button {
  border: none;
  position: relative;

  &.theme-toggle {
    // background-color:  $clr-grey;
    height: 20px;
    width: 40px;
    border-radius: 50px;
    display: inline-flex;
    align-items: center;
    padding: 0;

    &::after {
      position: absolute;
      left: 2px;
      top: 1;
      content: "";
      height: 15px;
      width: 15px;
      border-radius: 50%;
      background-color: $clr-white;
      transition: left .2s ease-out 0s;
    }
    
    &.checked::after {
      left: 23px;
    }

  }

  &.search {
    background-color: transparent;
    display: flex;

    > svg {
      fill: $clr-accent;
      font-size: 1.5rem;
    } 
  }

  &.play {
    @include center-xy;
    background-color: $clr-accent-light;
    height: 50px;
    width: 50px;
    aspect-ratio: 1/1;
    border-radius: 50%;
    transition-duration: .55s;
    transform-origin: center;
    transform-box: fill-box;

    > svg {
      fill: $clr-accent;
      font-size: 1.5rem;
    } 

    &:hover, 
    &:focus-within
    {
      transform: scale(1.10);
    }
  }
}

header {
  @include center-space-between;

  & svg {
    font-size: 2rem;
  }

  & .switch-container {
    @include center-xy;
    gap: 1rem;
  }
}

.search-bar {
  @include center-space-between;

  padding: .5rem 1rem;
  border-radius: 10px;

  & input {
    border: none;
    background-color: inherit;
  }
}

.entry {
  & > * + * {
    margin-block-start: 1rem;
  }

  & .word {
    @include center-space-between;
  }

  & .definition-container {
    margin-block-start: 1rem;

    & h2 {
      display: flex;
      gap: 1rem;
      align-items: center;
  
      & .deco {
        flex-basis: 100%;
        display: block;
        height: 1px;
      }
    }
  }

  & .definition-container p {
    margin-block-start: 1rem;
  }

  & .definition-container > ul {
    padding: 0 1rem;
  }

  & .definition-container > ul > li {
    margin-block-start: 1rem;
  }

  & .definition-container > ul > li::marker {
    color: $clr-accent;
  }
}

.dictionary {
  padding-block-start: 2rem;

  // applies 2rem to margin-top for every child of dictionary EXCEPT the first
  & > * + * {
    margin-top: 2rem;
  }
}